# Directories
BIN_DIR=build/kernel

# CC
CC=gcc
CCFLAGS=-m64 \
    -nostdlib -nostdinc -fno-builtin -fno-stack-protector \
    -D__AMD64__ \
    -D__DEBUG__ \
    -x c \
    -mcmodel=large \
    -I./src/
    
# Object files
OBJECT_FILES = \
    amd64/cpu/cr3.o \
    amd64/main.o \
    amd64/entry.o \
    amd64/debug/console.o \
    amd64/io/io.o \
    amd64/memory/frame.o \
    amd64/memory/page.o \
    amd64/memory/heap.o \
    amd64/sync/spinlock.o \
    amd64/cpu/interrupts.o \
    amd64/cpu/asm/interrupts.o \
    common/memory/dlmalloc.o \
    common/debug/console.o \
    common/memory/frame.o \
    common/memory/mem_align.o \
    common/memory/memcpy.o \
    common/memory/memset.o \
    common/memory/strlen.o \
    common/memory/strcpy.o \
    common/memory/strcmp.o

OBJECT_PATHS = $(OBJECT_FILES:%.o=$(BIN_DIR)/%.o)

# Compiles C code
$(BIN_DIR)/%.o: $(SOURCE_DIR)/%.c
	mkdir -p $(@D)
	$(CC) $(CCFLAGS) -o $@ -c $<

# Assembles NASM
$(BIN_DIR)/%.o: $(SOURCE_DIR)/%.s
	mkdir -p $(@D)
	$(ASM64) $(ASM64FLAGS) -o $@ $<
    
# Links the binary
.PHONY: link
link:
	$(LD) $(LDFLAGS) -T link/amd64/kernel.ld -o $(BIN_DIR)/kernel64.bin $(OBJECT_PATHS)
    
# Builds the object files
build: $(OBJECT_PATHS)
    
# Assembles the binary
.PHONY: all
all: build link
